# ??????Ϣѧ?????ر???һЩR???????????´??룬ֱ?????м??ɣ?
rm(list = ls())
rm(list = ls())
# ???þ?????
options()$repos
options()$BioC_mirror
#options(BioC_mirror="https://mirrors.ustc.edu.cn/bioc/")
options(BioC_mirror="http://mirrors.tuna.tsinghua.edu.cn/bioconductor/")
options("repos" = c(CRAN="https://mirrors.tuna.tsinghua.edu.cn/CRAN/"))
options()$repos
options()$BioC_mirror
# ????һ??
options()$repos
install.packages('WGCNA')
install.packages(c("FactoMineR", "factoextra"))
install.packages(c("ggplot2", "pheatmap","ggpubr"))
library("FactoMineR")
library("factoextra")
# ????????
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("KEGG.db",ask = F,update = F)
BiocManager::install(c("GSEABase","GSVA","clusterProfiler" ),ask = F,update = F)
BiocManager::install(c("GEOquery","limma","impute" ),ask = F,update = F)
BiocManager::install(c("org.Hs.eg.db","hgu133plus2.db" ),ask = F,update = F)
# ??????????github?а?װ
# ???е?R?????ύ?ϴ???CRAN????Github????Ҫͨ??һ???????��??а?װ
# R??װdevtools??
install.packages("devtools")
library(devtools)
# ??װgithub?ϵ?R?????跭ǽ????hosts??
devtools::install_github('lchiffon/REmap')
# ǰΪgithub???û???????Ϊ????
# ????--????R????
library(REmap)
library(GSEABase)
library(GSVA)
library(clusterProfiler)
library(ggplot2)
library(ggpubr)
library(hgu133plus2.db)
# ????--????R????
library(REmap)
library(GSEABase)
library(GSVA)
library(clusterProfiler)
library(ggplot2)
library(ggpubr)
library(hgu133plus2.db)
library(limma)
library(org.Hs.eg.db)
library(pheatmap)
BiocManager::install(c("org.Hs.eg.db","hgu133plus2.db" ),ask = F,update = F)
BiocManager::install('sva')
if (require(MAGeCKFlute) == F){
BiocManager::install('MAGeCKFlute')
}else{
library(MAGeCKFlute)
}
if (require(MAGeCKFlute) == F){
BiocManager::install('MAGeCKFlute')
}else{
library(MAGeCKFlute)
}
if (require(MAGeCKFlute) == F){
BiocManager::install('MAGeCKFlute')
}else{
library(MAGeCKFlute)
}
if (require(MAGeCKFlute) == F){
BiocManager::install('MAGeCKFlute')
}else{
library(MAGeCKFlute)
}
if (require(MAGeCKFlute) == F){
BiocManager::install('MAGeCKFlute')
}else{
library(MAGeCKFlute)
}
if (require(sva) == F){
BiocManager::install('sva')
}else{
library(sva)
}
if (require(sva) == F){
BiocManager::install('sva')
}else{
library(sva)
}
if (require(sva) == F){
BiocManager::install('sva')
}else{
library(sva)
}
library(readxl)
X11427_2021_1990_MOESM2_ESM_1_ <- read_excel("C:/Users/Administrator/Downloads/11427_2021_1990_MOESM2_ESM (1).xlsx")
View(X11427_2021_1990_MOESM2_ESM_1_)
library(dplyr)
X11427_2021_1990_MOESM2_ESM_1_ %>% filter(X11427_2021_1990_MOESM2_ESM_1_$`Top 10% of EGFP intensity` < 0.05 and X11427_2021_1990_MOESM2_ESM_1_$`Top 2% of EGFP intensity` < 0.05)
X11427_2021_1990_MOESM2_ESM_1_ %>% filter(X11427_2021_1990_MOESM2_ESM_1_$`Top 10% of EGFP intensity` < 0.05, X11427_2021_1990_MOESM2_ESM_1_$`Top 2% of EGFP intensity` < 0.05)
X11427_2021_1990_MOESM2_ESM_1_ %>% filter(X11427_2021_1990_MOESM2_ESM_1_$`Top 10% of EGFP intensity` < 0.05)
X11427_2021_1990_MOESM2_ESM_1_ %>% filter(X11427_2021_1990_MOESM2_ESM_1_$`Top 10% of EGFP intensity` < 0.05&X11427_2021_1990_MOESM2_ESM_1_$`Top 2% of EGFP intensity` < 0.05)
View(X11427_2021_1990_MOESM2_ESM_1_)
df <- read_excel("C:/Users/Administrator/Downloads/11427_2021_1990_MOESM2_ESM (1).xlsx")
View(df)
df <- read_excel("C:/Users/Administrator/Downloads/11427_2021_1990_MOESM2_ESM (1).xlsx", header = T)
df <- read.table("C:/Users/Administrator/Downloads/11427_2021_1990_MOESM2_ESM (1).xlsx", header = T)
rm(list = ls())
setwd('C:/Users/Administrator/Desktop/lung_PTX/R_scripts/')
getwd()
# install packages
library(dplyr)
library(ggplot2)
if (require(MAGeCKFlute) == F){
BiocManager::install('MAGeCKFlute')
}else{
library(MAGeCKFlute)
}
# raw data input
raw_count <- read.csv('../sgRNA_count_test123.count.txt', sep = '\t', header = T)
# raw data input
raw_count <- read.csv('../sgRNA_count_test123.count.txt', sep = '\t', header = T)
# QC
sgrna_countsummary <- read.csv('../sgRNA_count_test123.countsummary.txt', sep = '\t', header = T)
QC <- function(countsummary){
BarView(countsummary, x = "Label", y = "GiniIndex",ylab = "Gini index", main = "Evenness of sgRNA reads")
ggsave(path = './count_QC_result', filename = 'GiniIndex.pdf', width = 30, units = 'cm')
countsummary$Missed = log10(countsummary$Zerocounts)
BarView(countsummary, x = "Label", y = "Missed", fill = "#394E12",ylab = "Log10 missed gRNAs", main = "Missed sgRNAs")
ggsave(path = './count_QC_result', filename = 'Missed_sgrna.pdf', width = 30, units = 'cm')
MapRatesView(countsummary)
ggsave(path = './count_QC_result', filename = 'MapRates.pdf', width = 30, units = 'cm')
}
QC(sgrna_countsummary)
# cluster and PCA
batch_info_123 <- read.csv('../batch_MAT_123.txt', sep = '\t', header = T)
# cluster and PCA
batch_info_123 <- read.csv('../batch_MAT_123.txt', sep = '\t', header = T)
BatchRemove(mat = raw_count, batchMat = batch_info_123, cluster = T, pca = T, outdir = './Batch_removal_123/')
# translate nonessential gene list into a sgRNA list
sg_gene_list <- read.csv('../Human_GeCKOv2_Library_A_3_mageck.csv', header = F)
nonessential_gene_list <- read.table('../41596_2018_113_MOESM3_ESM.txt', fileEncoding = 'utf-16le', header = F)
# a pick up function
pick_up_nonessential <- function(gene_list, sg_to_gene){
nonessential_sgrna_list <- data.frame()
for (i in gene_list$V1) {
tmp_df <- filter(sg_to_gene, V3 == i)
nonessential_sgrna_list <- rbind(nonessential_sgrna_list, tmp_df)
}
return(nonessential_sgrna_list)
}
nonessential_sgrna_list <- pick_up_nonessential(nonessential_gene_list, sg_gene_list)
write.table(nonessential_sgrna_list$V1, '../nonessential_sgrna_list.txt', quote = F, row.names = F, col.names = T, fileEncoding = 'UTF-8')
# MLE downstream
# input posControl
The_list_of_core_essential_genes <- read.table('../The_list_of_core_essential_genes.txt', fileEncoding = 'utf-16le', header = T)
FluteMLE('../all_test123.mle.gene_summary.txt', ctrlname = 'DMSO', treatname = 'PTX', pathview.top = 50, cell_lines = 'A549', top = 5, omitEssential = T, proj = 'all_123',
enrich_method = 'HGT', scale_cutoff = 2, verbose = T, posControl = The_list_of_core_essential_genes$hgnc_symbol, width = 12, height = 18)
# select significant genes to rank
raw_MLE_result <- read.csv('../all_test123.mle.gene_summary.txt', sep = '\t', header = T)
View(korg)
View(raw_MLE_result)
genes_significant <- raw_MLE_result %>% filter(.$PTX.wald.fdr < 0.1)
View(genes_significant)
genes_significant <- raw_MLE_result$Gene %>% filter(.$PTX.wald.fdr < 0.1)
genes_significant <- raw_MLE_result %>% filter(.$PTX.wald.fdr < 0.1)$Gene
genes_significant <- raw_MLE_result %>% filter(.$PTX.wald.fdr < 0.1)
View(genes_significant)
genes_significant <- (raw_MLE_result %>% filter(.$PTX.wald.fdr < 0.1))$Gene
genes_significant_list <- (raw_MLE_result %>% filter(.$PTX.wald.fdr < 0.1))$Gene
genes_significant_list <- (raw_MLE_result %>% filter(.$PTX.wald.fdr < 0.1))$Gene
selected_result <- data.frame()
selected_result <- data.frame()
for(gene in genes_significant_list){
temp_df <- filter(raw_MLE_result, Gene == i)
selected_result <- rbind(selected_result, temp_df)
}
for(gene in genes_significant_list){
temp_df <- filter(raw_MLE_result, Gene == gene)
selected_result <- rbind(selected_result, temp_df)
}
View(selected_result)
selected_result <- read.csv('./MAGeCKFlute_all_123/Selection/Data_ScatterView_TreatvsCtrl.txt', header = T, sep = '\t')
# select significant genes to rank
raw_MLE_result <- read.csv('../all_test123.mle.gene_summary.txt', sep = '\t', header = T)
selected_result <- read.csv('./MAGeCKFlute_all_123/Selection/Data_ScatterView_TreatvsCtrl.txt', header = T, sep = '\t')
genes_significant_list <- (raw_MLE_result %>% filter(.$PTX.wald.fdr < 0.1))$Gene
selected_result_significant <- data.frame()
selected_result_significant <- data.frame()
for(gene in genes_significant_list){
temp_df <- filter(raw_MLE_result, Gene == gene)
selected_result_significant <- rbind(selected_result, temp_df)
}
for(gene in genes_significant_list){
temp_df <- filter(selected_result, Gene == gene)
selected_result_significant <- rbind(selected_result, temp_df)
}
View(selected_result_significant)
for(gene in genes_significant_list){
temp_df <- filter(selected_result, Gene == gene)
print(temp_df)
selected_result_significant <- rbind(selected_result, temp_df)
}
# select significant genes to rank
raw_MLE_result <- read.csv('../all_test123.mle.gene_summary.txt', sep = '\t', header = T)
selected_result <- read.csv('./MAGeCKFlute_all_123/Selection/Data_ScatterView_TreatvsCtrl.txt', header = T, sep = '\t')
genes_significant_list <- (raw_MLE_result %>% filter(.$PTX.wald.fdr < 0.1))$Gene
genes_significant_list
selected_result_significant <- data.frame()
# select significant genes to rank
raw_MLE_result <- read.csv('../all_test123.mle.gene_summary.txt', sep = '\t', header = T)
selected_result <- read.csv('./MAGeCKFlute_all_123/Selection/Data_ScatterView_TreatvsCtrl.txt', header = T, sep = '\t')
genes_significant_list <- (raw_MLE_result %>% filter(.$PTX.wald.fdr < 0.1))$Gene
selected_result_significant <- data.frame()
for(gene in genes_significant_list){
temp_df <- filter(selected_result, Gene == gene)
selected_result_significant <- rbind(selected_result_significant, temp_df)
}
View(selected_result)
genes_significant_list <- (raw_MLE_result %>% filter(.$PTX.wald.fdr < 0.15))$Gene
selected_result_significant <- data.frame()
for(gene in genes_significant_list){
temp_df <- filter(selected_result, Gene == gene)
selected_result_significant <- rbind(selected_result_significant, temp_df)
}
# select significant genes to rank
raw_MLE_result <- read.csv('../all_test123.mle.gene_summary.txt', sep = '\t', header = T)
selected_result <- read.csv('./MAGeCKFlute_all_123/Selection/Data_ScatterView_TreatvsCtrl.txt', header = T, sep = '\t')
genes_significant_list <- (raw_MLE_result %>% filter(.$PTX.wald.fdr < 0.2))$Gene
selected_result_significant <- data.frame()
for(gene in genes_significant_list){
temp_df <- filter(selected_result, Gene == gene)
selected_result_significant <- rbind(selected_result_significant, temp_df)
}
genes_significant_list <- (raw_MLE_result %>% filter(.$PTX.wald.fdr < 0.15))$Gene
selected_result_significant <- data.frame()
for(gene in genes_significant_list){
temp_df <- filter(selected_result, Gene == gene)
selected_result_significant <- rbind(selected_result_significant, temp_df)
}
View(selected_result_significant)
selected_result_significant <- selected_result_significant %>% mutate(new_rank = rank(.$Diff))
View(selected_result)
# significant genes PLOT
# rank plot
ggplot(selected_result, mapping = aes(x = Rank, y = Diff)) + geom_point()
# significant genes PLOT
# rank plot
ggplot(selected_result, mapping = aes(x = Rank, y = Diff)) + geom_point(aes(color = group))
# significant genes PLOT
# rank plot
ggplot(selected_result, mapping = aes(x = Rank, y = Diff)) + geom_point(aes(color = group), size = 5)
# significant genes PLOT
# rank plot
ggplot(selected_result, mapping = aes(x = Rank, y = Diff)) + geom_point(aes(color = group), size = 3)
# significant genes PLOT
# rank plot
ggplot(selected_result, mapping = aes(x = Rank, y = Diff)) + geom_point(aes(color = group), size = 2.5)
# significant genes PLOT
# rank plot
ggplot(selected_result, mapping = aes(x = Rank, y = Diff)) + geom_point(aes(color = group), size = 2.5) + geom_point(data = selected_result_significant, size = 4, color = 'purple')
# significant genes PLOT
# rank plot
ggplot(selected_result, mapping = aes(x = Rank, y = Diff)) + geom_point(aes(color = group), size = 2.5) + geom_point(data = selected_result_significant, size = 4, color = 'purple', label = selected_result_significant$Gene)
?geom_point
?geom_sf_label
# significant genes PLOT
# rank plot
ggplot(selected_result, mapping = aes(x = Rank, y = Diff)) + geom_point(aes(color = group), size = 2.5) + geom_point(data = selected_result_significant, size = 4, color = 'purple') +
geom_text(aes(label = selected_result_significant$Gene))
# significant genes PLOT
# rank plot
ggplot(selected_result, mapping = aes(x = Rank, y = Diff)) + geom_point(aes(color = group), size = 2.5) + geom_point(data = selected_result_significant, aes(label = selected_result_significant$Gene), size = 4, color = 'purple')
?text
# significant genes PLOT
# rank plot
ggplot(selected_result, mapping = aes(x = Rank, y = Diff)) + geom_point(aes(color = group), size = 2.5) + geom_point(data = selected_result_significant, size = 4, color = 'purple') + text(labels = selected_result_significant$Gene)
# significant genes PLOT
# rank plot
ggplot(selected_result, mapping = aes(x = Rank, y = Diff)) + geom_point(aes(color = group), size = 2.5) + geom_point(data = selected_result_significant, size = 4, color = 'purple')
# significant genes PLOT
library(ggrepel)
# rank plot
ggplot(selected_result, mapping = aes(x = Rank, y = Diff)) + geom_point(aes(color = group), size = 2.5) + geom_point(data = selected_result_significant, size = 4, color = 'purple') + geom_text_repel(data = selected_result_significant,
aes(label = selected_result_significant$Gene))
# rank plot
ggplot(selected_result, mapping = aes(x = Rank, y = Diff)) + geom_point(aes(color = group), size = 2.5) + geom_point(data = selected_result_significant, size = 4, color = 'purple') + geom_text_repel(data = selected_result_significant,
aes(label = Gene))
?geom_text_repel
?geom_text_repel
# rank plot
ggplot(selected_result, mapping = aes(x = Rank, y = Diff)) + geom_point(aes(color = group), size = 2.5) + geom_point(data = selected_result_significant, size = 4, color = 'purple') +
geom_text_repel(data = selected_result_significant, aes(label = Gene), size = 4)
# rank plot
rank_plot <- ggplot(selected_result, mapping = aes(x = Rank, y = Diff)) + geom_point(aes(color = group), size = 2.5) +
geom_point(data = selected_result_significant, size = 4, color = 'purple') +
geom_text_repel(data = selected_result_significant, aes(label = Gene), size = 4)
selected_result
Scatter_View <- ggplot(selected_result[.$group == 'bottom'], mapping = aes(x = RandomIndex, y = Diff)) + geom_point()
Scatter_View <- ggplot(selected_result[group == 'bottom'], mapping = aes(x = RandomIndex, y = Diff)) + geom_point()
Scatter_View <- ggplot(selected_result[selected_result$group == 'bottom'], mapping = aes(x = RandomIndex, y = Diff)) + geom_point()
selected_result[selected_result$group == 'bottom']
selected_result$group == 'bottom'
Scatter_View <- ggplot(selected_result[which(selected_result$group == 'bottom')], mapping = aes(x = RandomIndex, y = Diff)) + geom_point()
Scatter_View <- ggplot(selected_result[filter(selected_result$group == 'bottom')], mapping = aes(x = RandomIndex, y = Diff)) + geom_point()
Scatter_View <- ggplot(filter(selected_result$group == 'bottom'), mapping = aes(x = RandomIndex, y = Diff)) + geom_point()
filter(selected_result$group == 'bottom')
Scatter_View <- ggplot(filter(selected_result, group == 'bottom'), mapping = aes(x = RandomIndex, y = Diff)) + geom_point()
Scatter_View <- ggplot(filter(selected_result, group == 'bottom'), mapping = aes(x = RandomIndex, y = Diff)) + geom_point()
Scatter_View
# Scatter View
Scatter_View <- ggplot(filter(selected_result, group == 'bottom'), mapping = aes(x = RandomIndex, y = -log2(Diff))) + geom_point()
Scatter_View
ggplot(filter(selected_result, group == 'bottom'), mapping = aes(x = RandomIndex, y = Diff)) + geom_point()
# Scatter View
selected_result <- selected_result %>% mutate(-log2Diff = -log2(Diff))
# Scatter View
selected_result <- selected_result %>% mutate(-log2Diff = (-log2(Diff)))
# Scatter View
selected_result <- selected_result %>% mutate(-log2Diff = 1)
# Scatter View
selected_result <- selected_result %>% mutate(log2Diff)
# get a rank in significant genes
selected_result_significant <- selected_result_significant %>% mutate(new_rank = rank(.$Diff))
# Scatter View
selected_result <- selected_result %>% mutate(log2Diff = 's')
# Scatter View
selected_result <- selected_result %>% mutate(-log2Diff = -log2(.$Diff))
# Scatter View
selected_result <- selected_result %>% mutate(log2Diff = -log2(.$Diff))
# Scatter View
selected_result <- selected_result %>% mutate(log2Diff = log2(.$Diff))
selected_result <- read.csv('./MAGeCKFlute_all_123/Selection/Data_ScatterView_TreatvsCtrl.txt', header = T, sep = '\t')
ggplot(filter(selected_result, group == 'bottom'), mapping = aes(x = RandomIndex, y = Diff)) + geom_point()
# Scatter View
Scatter_View <- ggplot(filter(selected_result, group == 'bottom'), mapping = aes(x = RandomIndex, y = Diff)) + geom_point() +
geom_point(data = selected_result_significant, size = 4, color = 'red')
# Scatter View
Scatter_View <- ggplot(filter(selected_result, group == 'bottom'), mapping = aes(x = RandomIndex, y = Diff)) + geom_point() +
geom_point(data = selected_result_significant, size = 4, color = 'red') +
geom_text_repel(data = selected_result_significant, aes(label = Gene), size = 4)
Scatter_View
# Scatter View
Scatter_View <- ggplot(filter(selected_result, group == 'bottom'), mapping = aes(x = RandomIndex, y = Diff)) + geom_point() +
geom_point(data = selected_result_significant, size = 4, color = 'blue') +
geom_text_repel(data = selected_result_significant, aes(label = Gene), size = 4, color = 'red')
Scatter_View
geom_point
?geom_point
plots <- list(rank_plot, Scatter_View)
plots <- list(rank_plot, Scatter_View)
filename <- stringr::str_c(names(plots), '.pdf')
library(purrr)
?ggsave
pwalk(list(filename, plots), ggsave, path = './select_significant/')
names(plots)
plots
# rank plot
rank_plot <- ggplot(selected_result, mapping = aes(x = Rank, y = Diff)) + geom_point(aes(color = group), size = 2.5) +
geom_point(data = selected_result_significant, size = 4, color = 'purple') +
geom_text_repel(data = selected_result_significant, aes(label = Gene), size = 4)
# Scatter View
Scatter_View <- ggplot(filter(selected_result, group == 'bottom'), mapping = aes(x = RandomIndex, y = Diff)) + geom_point() +
geom_point(data = selected_result_significant, size = 4, color = 'blue') +
geom_text_repel(data = selected_result_significant, aes(label = Gene), size = 4, color = 'red')
plots <- list(rank_plot, Scatter_View)
filename <- stringr::str_c(c('rank_plot', 'Scatter_View'), '.pdf')
plots <- list(rank_plot, Scatter_View)
filename <- stringr::str_c(c('rank_plot', 'Scatter_View'), '.pdf')
pwalk(list(filename, plots), ggsave, path = './select_significant/', width = 30, height = 25, units = 'cm')
