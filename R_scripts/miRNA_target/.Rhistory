count = 0
for(miRNA in miRNA_list){
miRNA_new <- miRNA %>% strsplit('_') %>% .[[1]] %>% .[1:length(.)-1] %>%
paste(collapse = '-')
count <- count + 1
new_miRNA_list[count] <- miRNA_new
}
new_miRNA_list
target_result <- get_multimir(org = 'hsa',
mirna = new_miRNA_list,
table = 'validated',
summary = T)
all_targets <- target_result@data
all_targets_experiment <- target_result@data[grep('Luciferase|qRT-PCR|Western blot',
target_result@data[, 'experiment']), ]
### Enrichment
## mRNA with experiments support
# GO
go_experiment <- enrichGO(gene = all_targets_experiment$target_entrez, OrgDb = 'org.Hs.eg.db',
ont = 'all', readable = T, pAdjustMethod = 'BH', pvalueCutoff = 0.05, qvalueCutoff = 0.1)
go_result_experiment <- data.frame(go_experiment)
# KEGG
KEGG_experiment <- enrichKEGG(gene = all_targets_experiment$target_entrez, organism = 'hsa',
keyType = 'kegg', pAdjustMethod = 'BH', pvalueCutoff = 0.05, qvalueCutoff = 0.1)
KEGG_result_experiment <- setReadable(KEGG_experiment, OrgDb = org.Hs.eg.db, keyType = 'ENTREZID')
KEGG_result_experiment <- data.frame(KEGG_result_experiment@result)
## all mRNA
# GO
go_all <- enrichGO(gene = all_targets$target_entrez, OrgDb = 'org.Hs.eg.db',
ont = 'all', readable = T, pAdjustMethod = 'BH', pvalueCutoff = 0.05, qvalueCutoff = 0.1)
go_result_all <- data.frame(go_all)
# KEGG
KEGG_all <- enrichKEGG(gene = all_targets$target_entrez, organism = 'hsa',
keyType = 'kegg', pAdjustMethod = 'BH', pvalueCutoff = 0.05, qvalueCutoff = 0.1)
KEGG_result_all <- setReadable(KEGG_all, OrgDb = org.Hs.eg.db, keyType = 'ENTREZID')
KEGG_result_all <- data.frame(KEGG_result_all@result)
rm(list = ls())
setwd('C:/Users/Administrator/Desktop/lung_PTX/R_scripts/miRNA_target/')
getwd()
if (require(multiMiR) == F){
BiocManager::install('multiMiR')
}else{
library(multiMiR)
}
library(dplyr)
library(pheatmap)
library(clusterProfiler)
fold_change_data <- read.delim('GSE119845_fold_change.txt', header = T, sep = '\t')
significant_up <- fold_change_data[order(fold_change_data$Fold_Change, decreasing = T), ] %>%
filter(.$pvalue < 0.05)
most_upregurated <- fold_change_data[order(fold_change_data$Fold_Change, decreasing = T), ] %>%
filter(.$pvalue < 0.05) %>% .[1:11, ]
miRNA_list <- most_upregurated$mirna
# find miRNA targets
# re-Formatting
new_miRNA_list <- vector('list', length = length(miRNA_list))
count = 0
for(miRNA in miRNA_list){
miRNA_new <- miRNA %>% strsplit('_') %>% .[[1]] %>% .[1:length(.)-1] %>%
paste(collapse = '-')
count <- count + 1
new_miRNA_list[count] <- miRNA_new
}
new_miRNA_list
target_result <- get_multimir(org = 'hsa',
mirna = new_miRNA_list,
table = 'validated',
summary = T)
all_targets <- target_result@data
View(all_targets)
all_targets_experiment <- target_result@data[grep('Luciferase|qRT-PCR|Western blot|ChIP-seq|Immunoprecipitaion',
target_result@data[, 'experiment']), ]
### Enrichment
## mRNA with experiments support
# GO
go_experiment <- enrichGO(gene = all_targets_experiment$target_entrez, OrgDb = 'org.Hs.eg.db',
ont = 'all', readable = T, pAdjustMethod = 'BH', pvalueCutoff = 0.05, qvalueCutoff = 0.1)
go_result_experiment <- data.frame(go_experiment)
# KEGG
KEGG_experiment <- enrichKEGG(gene = all_targets_experiment$target_entrez, organism = 'hsa',
keyType = 'kegg', pAdjustMethod = 'BH', pvalueCutoff = 0.05, qvalueCutoff = 0.1)
KEGG_result_experiment <- setReadable(KEGG_experiment, OrgDb = org.Hs.eg.db, keyType = 'ENTREZID')
library(org.Hs.eg.db)
KEGG_result_experiment <- setReadable(KEGG_experiment, OrgDb = org.Hs.eg.db, keyType = 'ENTREZID')
KEGG_result_experiment <- data.frame(KEGG_result_experiment@result)
View(go_result_experiment)
View(KEGG_result_experiment)
### Plot
enrich_result_plot <- function(enrich_result, enrich_type, top, plot_type, outdir){
if(plot_type == 'bar'){
if(enrich_type == 'go'){
go_enrich_result <- data.frame(enrich_result)
write.csv(go_enrich_result, './MAGeCKFlute_all_123/GO/go_enrich_result.csv', quote = F)
BP_result <- subset(go_enrich_result, subset = (ONTOLOGY == "BP"))[1:top, ]
CC_result <- subset(go_enrich_result, subset = (ONTOLOGY == "CC"))[1:top, ]
MF_result <- subset(go_enrich_result, subset = (ONTOLOGY == "MF"))[1:top, ]
all_result <- rbind(BP_result, CC_result, MF_result)
all_result <- na.omit(all_result)
all_result$Description <- factor(all_result$Description,levels = rev(all_result$Description))
bar_plot <- ggplot(all_result, mapping = aes(x = Description, y = Count, fill = ONTOLOGY)) +
geom_bar(stat = 'identity', width = 0.3) + coord_flip() + theme_bw() +
scale_x_discrete(labels = function(x){
strwrap(x, width = 45)
}) + labs(x = 'GO terms', y = 'Number') +
theme(axis.title = element_text(size = 13),
axis.text = element_text(size = 11),
legend.title = element_text(size = 13),
legend.text = element_text(size = 11),
plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm"))
ggsave(bar_plot, path = outdir, filename = 'go_bar_plot.pdf')
}else if(enrich_type == 'kegg'){
kegg_enrich_result <- data.frame(enrich_result)
kegg_enrich_result <- kegg_enrich_result[1:top, ]
kegg_enrich_result <- na.omit(kegg_enrich_result)
kegg_enrich_result$Description <- factor(kegg_enrich_result$Description,levels = rev(kegg_enrich_result$Description))
bar_plot <- ggplot(kegg_enrich_result, mapping = aes(x = Description, y = Count, fill = p.adjust)) +
geom_bar(stat = 'identity', width = 0.3) + coord_flip() + theme_bw() +
scale_x_discrete(labels = function(x){
strwrap(x, width = 45)
}) + labs(x = 'KEGG pathways', y = 'Number') +
theme(axis.title = element_text(size = 13),
axis.text = element_text(size = 11),
legend.title = element_text(size = 13),
legend.text = element_text(size = 11),
plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm"))
ggsave(bar_plot, path = outdir, filename = 'kegg_bar_plot.pdf')
}
}else if(plot_type == 'point'){
if(enrich_type == 'kegg'){
kegg_enrich_result <- data.frame(enrich_result)
kegg_enrich_result <- kegg_enrich_result[1:top, ]
kegg_enrich_result <- na.omit(kegg_enrich_result)
kegg_enrich_result$Description = factor(kegg_enrich_result$Description, levels = rev(kegg_enrich_result$Description))
point_plot <- ggplot(data = kegg_enrich_result,aes(x = GeneRatio, y = reorder(Description, Count))) +
geom_point(aes(size = Count, color = -log10(p.adjust)))+
theme_bw() +
scale_colour_gradient(low = "blue",high = "red") +
labs(x = "GeneRatio",y = "", color = expression(-log10(p.adjust)), size = "Count") +
theme(axis.title = element_text(size = 12),axis.text = element_text(size = 10),
legend.title = element_text(size = 11),legend.text = element_text(size = 10))
point_plot
ggsave(point_plot, path = outdir, filename = 'kegg_point_plot.pdf', width = 25, height = 25, units = 'cm')
}else if(enrich_type == 'go'){
go_enrich_result <- data.frame(enrich_result)
write.csv(go_enrich_result, './MAGeCKFlute_all_123/GO/go_enrich_result.csv', quote = F)
BP_result <- subset(go_enrich_result, subset = (ONTOLOGY == "BP"))[1:top, ]
CC_result <- subset(go_enrich_result, subset = (ONTOLOGY == "CC"))[1:top, ]
MF_result <- subset(go_enrich_result, subset = (ONTOLOGY == "MF"))[1:top, ]
all_result <- rbind(BP_result, CC_result, MF_result)
all_result <- na.omit(all_result)
go_enrich_result$Description = factor(go_enrich_result$Description, levels = rev(go_enrich_result$Description))
point_plot <- ggplot(data = go_enrich_result,aes(x = GeneRatio, y = reorder(Description, Count), fill = ONTOLOGY)) +
geom_point(aes(size = Count, color = -log10(p.adjust)))+
theme_bw() +
scale_colour_gradient(low = "blue",high = "red") +
scale_y_discrete(labels = function(x){
strwrap(x,width = 40)
}) +
labs(x = "GeneRatio",y = "", color = expression(-log10(p.adjust)), size = "Count") +
theme(axis.title = element_text(size = 12), axis.text = element_text(size = 10) ,
legend.title = element_text(size = 11), legend.text = element_text(size = 10))
ggsave(point_plot, path = outdir, filename = 'go_point_plot.pdf', width = 25, height = 25, units = 'cm')
}
}
}
getwd()
## with experiment
# GO
bar_go <- enrich_result_plot(go_result_experiment, 'go', 'bar', 'enrich_result/')
## with experiment
# GO
bar_go <- enrich_result_plot(go_result_experiment, 'go', 'bar', 'enrich_result/')
bar_go
library(ggplot2)
### Plot
enrich_result_plot <- function(enrich_result, enrich_type, top, plot_type, outdir){
if(plot_type == 'bar'){
if(enrich_type == 'go'){
go_enrich_result <- data.frame(enrich_result)
write.csv(go_enrich_result, './MAGeCKFlute_all_123/GO/go_enrich_result.csv', quote = F)
BP_result <- subset(go_enrich_result, subset = (ONTOLOGY == "BP"))[1:top, ]
CC_result <- subset(go_enrich_result, subset = (ONTOLOGY == "CC"))[1:top, ]
MF_result <- subset(go_enrich_result, subset = (ONTOLOGY == "MF"))[1:top, ]
all_result <- rbind(BP_result, CC_result, MF_result)
all_result <- na.omit(all_result)
all_result$Description <- factor(all_result$Description,levels = rev(all_result$Description))
bar_plot <- ggplot(all_result, mapping = aes(x = Description, y = Count, fill = ONTOLOGY)) +
geom_bar(stat = 'identity', width = 0.3) + coord_flip() + theme_bw() +
scale_x_discrete(labels = function(x){
strwrap(x, width = 45)
}) + labs(x = 'GO terms', y = 'Number') +
theme(axis.title = element_text(size = 13),
axis.text = element_text(size = 11),
legend.title = element_text(size = 13),
legend.text = element_text(size = 11),
plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm"))
ggsave(bar_plot, path = outdir, filename = 'go_bar_plot.pdf')
}else if(enrich_type == 'kegg'){
kegg_enrich_result <- data.frame(enrich_result)
kegg_enrich_result <- kegg_enrich_result[1:top, ]
kegg_enrich_result <- na.omit(kegg_enrich_result)
kegg_enrich_result$Description <- factor(kegg_enrich_result$Description,levels = rev(kegg_enrich_result$Description))
bar_plot <- ggplot(kegg_enrich_result, mapping = aes(x = Description, y = Count, fill = p.adjust)) +
geom_bar(stat = 'identity', width = 0.3) + coord_flip() + theme_bw() +
scale_x_discrete(labels = function(x){
strwrap(x, width = 45)
}) + labs(x = 'KEGG pathways', y = 'Number') +
theme(axis.title = element_text(size = 13),
axis.text = element_text(size = 11),
legend.title = element_text(size = 13),
legend.text = element_text(size = 11),
plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm"))
ggsave(bar_plot, path = outdir, filename = 'kegg_bar_plot.pdf')
}
}else if(plot_type == 'point'){
if(enrich_type == 'kegg'){
kegg_enrich_result <- data.frame(enrich_result)
kegg_enrich_result <- kegg_enrich_result[1:top, ]
kegg_enrich_result <- na.omit(kegg_enrich_result)
kegg_enrich_result$Description = factor(kegg_enrich_result$Description, levels = rev(kegg_enrich_result$Description))
point_plot <- ggplot(data = kegg_enrich_result,aes(x = GeneRatio, y = reorder(Description, Count))) +
geom_point(aes(size = Count, color = -log10(p.adjust)))+
theme_bw() +
scale_colour_gradient(low = "blue",high = "red") +
labs(x = "GeneRatio",y = "", color = expression(-log10(p.adjust)), size = "Count") +
theme(axis.title = element_text(size = 12),axis.text = element_text(size = 10),
legend.title = element_text(size = 11),legend.text = element_text(size = 10))
point_plot
ggsave(point_plot, path = outdir, filename = 'kegg_point_plot.pdf', width = 25, height = 25, units = 'cm')
}else if(enrich_type == 'go'){
go_enrich_result <- data.frame(enrich_result)
write.csv(go_enrich_result, './MAGeCKFlute_all_123/GO/go_enrich_result.csv', quote = F)
BP_result <- subset(go_enrich_result, subset = (ONTOLOGY == "BP"))[1:top, ]
CC_result <- subset(go_enrich_result, subset = (ONTOLOGY == "CC"))[1:top, ]
MF_result <- subset(go_enrich_result, subset = (ONTOLOGY == "MF"))[1:top, ]
all_result <- rbind(BP_result, CC_result, MF_result)
all_result <- na.omit(all_result)
go_enrich_result$Description = factor(go_enrich_result$Description, levels = rev(go_enrich_result$Description))
point_plot <- ggplot(data = go_enrich_result,aes(x = GeneRatio, y = reorder(Description, Count), fill = ONTOLOGY)) +
geom_point(aes(size = Count, color = -log10(p.adjust)))+
theme_bw() +
scale_colour_gradient(low = "blue",high = "red") +
scale_y_discrete(labels = function(x){
strwrap(x,width = 40)
}) +
labs(x = "GeneRatio",y = "", color = expression(-log10(p.adjust)), size = "Count") +
theme(axis.title = element_text(size = 12), axis.text = element_text(size = 10) ,
legend.title = element_text(size = 11), legend.text = element_text(size = 10))
ggsave(point_plot, path = outdir, filename = 'go_point_plot.pdf', width = 25, height = 25, units = 'cm')
}
}
}
## with experiment
# GO
bar_go <- enrich_result_plot(go_result_experiment, 'go', 'bar', 'enrich_result/')
bar_go
### Plot
## with experiment
# GO
bar_go <- barplot(go_result_experiment[go_result_experiment$ONTOLOGY == 'BP'][1:15])
### Plot
## with experiment
# GO
bar_go <- barplot(go_result_experiment[go_result_experiment$ONTOLOGY == 'BP'][1:15, ])
go_result_experiment[go_result_experiment$ONTOLOGY == 'BP']
go_result_experiment[go_result_experiment$ONTOLOGY == 'BP']
### Plot
## with experiment
# GO
bar_go <- barplot(go_result_experiment[go_result_experiment$ONTOLOGY == 'BP', ][1:15, ])
go_result_experiment[go_result_experiment$ONTOLOGY == 'BP', ]
### Plot
## with experiment
# GO
bar_go <- barplot(go_result_experiment[go_result_experiment$ONTOLOGY == 'BP', ])
### Plot
## with experiment
# GO
bar_go <- barplot(go_result_experiment)
### Plot
## with experiment
# GO
bar_go <- barplot(go_result_experiment)
### Plot
## with experiment
# GO
bar_go <- barplot(go_experiment)
bar_go
?barplot
bar_go
### Plot
## with experiment
# GO
bar_go <- barplot(go_experiment, split = 'ONTOLOGY') + facet_grid(ONTOLOGY ~ ., scale = 'free')
bar_go
### Plot
## with experiment
# GO
bar_go <- barplot(go_experiment@result)
type(go_experiment@result)
go_result_experiment <- data.frame(go_experiment)
type(go_result_experiment)
go_result_experiment <- as.data.frame(go_experiment)
type(go_result_experiment)
go_result_experiment <- as.data.frame(go_experiment)
go_result_experiment
go_result_experiment <- as.data.frame(go_experiment)
go_result_experiment <- as.data.frame(go_experiment@result)
go_result_experiment
type(go_result_experiment)
### Plot
## with experiment
# GO
bar_go <- barplot(go_experiment)
### Plot
## with experiment
# GO
bar_go <- barplot(go_experiment)
bar_go
# KEGG
bar_kegg <- barplot(KEGG_result_experiment)
# KEGG
KEGG_experiment <- enrichKEGG(gene = all_targets_experiment$target_entrez, organism = 'hsa',
keyType = 'kegg', pAdjustMethod = 'BH', pvalueCutoff = 0.05, qvalueCutoff = 0.1)
# KEGG
bar_kegg <- barplot(KEGG_experiment)
bar_kegg
# KEGG
bar_kegg <- barplot(KEGG_experiment[1:15, ])
### Enrichment
## mRNA with experiments support
# GO
go_experiment <- enrichGO(gene = all_targets_experiment$target_entrez, OrgDb = 'org.Hs.eg.db',
ont = 'all', readable = T, pAdjustMethod = 'BH', pvalueCutoff = 0.05, qvalueCutoff = 0.1)
go_result_experiment <- as.data.frame(go_experiment@result)
### Plot
## with experiment
# GO
goBP <- subset(go_result_experiment, subset = (ONTOLOGY == "BP"))[1:10, ]
goCC <- subset(go_result_experiment, subset = (ONTOLOGY == "CC"))[1:10, ]
goMF <- subset(go_result_experiment, subset = (ONTOLOGY == "MF"))[1:10, ]
go.df <- rbind(goBP, goCC, goMF)
# 使画出的GO term的顺序与输入一致
go.df$Description <- factor(go.df$Description, levels = rev(go.df$Description))
go_bar <- ggplot(data = go.df,
aes(x = Description, y = Count, fill = ONTOLOGY))+
geom_bar(stat = "identity", width = 0.9)+
coord_flip() + theme_bw() +
scale_x_discrete(labels = function(x) str_wrap(x, width = 50)) +
labs(x = "GO terms",y = "GeneNumber",title = "Barplot of Enriched GO Terms")+ # 设置坐标轴标题及标题
theme(axis.title = element_text(size = 13), # 坐标轴标题大小
axis.text = element_text(size = 11), # 坐标轴标签大小
plot.title = element_text(size = 14,hjust = 0.5,face = "bold"), # 标题设置
legend.title = element_text(size = 13), # 图例标题大小
legend.text = element_text(size = 11), # 图例标签大小
plot.margin = unit(c(0.5,0.5,0.5,0.5),"cm")) # 图边距
go_bar
go_bar <- ggplot(data = go.df,
aes(x = Description, y = Count, fill = ONTOLOGY))+
geom_bar(stat = "identity", width = 0.9)+
coord_flip() + theme_bw() +
scale_x_discrete(labels = function(x) strwrap(x, width = 50)) +
labs(x = "GO terms",y = "GeneNumber",title = "Barplot of Enriched GO Terms")+ # 设置坐标轴标题及标题
theme(axis.title = element_text(size = 13), # 坐标轴标题大小
axis.text = element_text(size = 11), # 坐标轴标签大小
plot.title = element_text(size = 14,hjust = 0.5,face = "bold"), # 标题设置
legend.title = element_text(size = 13), # 图例标题大小
legend.text = element_text(size = 11), # 图例标签大小
plot.margin = unit(c(0.5,0.5,0.5,0.5),"cm")) # 图边距
go_bar
ggplot(data = go.df,
aes(x = Description, y = Count, fill = ONTOLOGY))+
geom_bar(stat = "identity", width = 0.9)+
coord_flip() + theme_bw() +
scale_x_discrete(labels = function(x) strwrap(x, width = 50))
View(go.df)
ggplot(data = go.df,
aes(x = Description, y = Count, fill = ONTOLOGY)) +
geom_bar(stat = "identity", width = 0.9)
ggplot(data = go.df,
aes(x = Description, y = Count, fill = ONTOLOGY)) +
geom_bar(stat = "identity", width = 0.9) +
coord_flip()
ggplot(data = go.df,
aes(x = Description, y = Count, fill = ONTOLOGY)) +
geom_bar(stat = "identity", width = 0.9) +
coord_flip() + theme_bw()
ggplot(data = go.df,
aes(x = Description, y = Count, fill = ONTOLOGY)) +
geom_bar(stat = "identity", width = 0.9) +
coord_flip() + theme_bw() +
scale_x_discrete(labels = function(x) strwrap(x, width = 50))
ggplot(data = go.df,
aes(x = Description, y = Count, fill = ONTOLOGY)) +
geom_bar(stat = "identity", width = 0.9) +
coord_flip() + theme_bw() +
scale_x_discrete(labels = function(x) strwrap(x, width = 90))
go_bar <- barplot(goBP)
type(goBP)
go_bar <- barplot(as.data.frame(goBP))
as.data.frame(goBP)
go_bar <- barplot(goBP$Description)
go_bar <- barplot(as.matrix(goBP))
barplot(go_experiment)
go_bar <- ggplot(data = goBP, mapping = aes(x = Description, y = Count, fill = p.adjust))
go_bar
go_bar <- ggplot(data = goBP, mapping = aes(x = Description, y = Count, fill = p.adjust)) +
geom_bar()
(go_bar <- ggplot(data = goBP, mapping = aes(x = Description, y = Count, fill = p.adjust)) +
geom_bar())
(go_bar <- ggplot(data = goBP, mapping = aes(x = Description, y = Count, fill = p.adjust)) +
geom_bar(stat = 'identity'))
(go_bar <- ggplot(data = goBP, mapping = aes(x = Description, y = Count, fill = p.adjust)) +
geom_bar(stat = 'identity', width = 0.8))
(go_bar <- ggplot(data = goBP, mapping = aes(x = Description, y = Count, fill = p.adjust)) +
geom_bar(stat = 'identity', width = 0.5))
(go_bar <- ggplot(data = goBP, mapping = aes(x = Description, y = Count, fill = p.adjust)) +
geom_bar(stat = 'identity', width = 0.7))
(go_bar <- ggplot(data = goBP, mapping = aes(x = Description, y = Count, fill = p.adjust, color = 'red')) +
geom_bar(stat = 'identity', width = 0.7))
(go_bar <- ggplot(data = goBP, mapping = aes(x = Description, y = Count, fill = p.adjust)) +
geom_bar(stat = 'identity', width = 0.7))
(go_bar <- ggplot(data = goBP, mapping = aes(x = Description, y = Count, fill = p.adjust)) +
geom_bar(stat = 'identity', width = 0.7)) + coord_flip()
(go_bar <- ggplot(data = goBP, mapping = aes(x = Description, y = Count, fill = p.adjust)) +
geom_bar(stat = 'identity', width = 0.7)) + coord_flip() + theme_bw()
barplot(go_experiment)
(go_bar <- ggplot(data = goBP, mapping = aes(x = Description, y = Count, fill = p.adjust)) +
geom_bar(stat = 'identity', width = 0.7)) + coord_flip() + theme_bw()
(go_bar <- ggplot(data = goBP, mapping = aes(x = Description, y = Count, fill = p.adjust)) +
geom_bar(stat = 'identity', width = 0.7, fill = 'red')) + coord_flip() + theme_bw()
(go_bar <- ggplot(data = goBP, mapping = aes(x = Description, y = Count, fill = p.adjust)) +
geom_bar(stat = 'identity', width = 0.7)) + coord_flip() + theme_bw()
(go_bar <- ggplot(data = goBP, mapping = aes(x = Description, y = Count, fill = p.adjust)) +
geom_bar(stat = 'identity', width = 0.7)) + coord_flip() + theme_bw() +
scale_color_gradient(low = "cyan", high = "red")
scale_color_gradient(low = "cyan", high = "red")
(go_bar <- ggplot(data = goBP, mapping = aes(x = Description, y = Count, fill = p.adjust)) +
geom_bar(stat = 'identity', width = 0.7)) + coord_flip() + theme_bw() +
scale_fill_gradient(low = "cyan", high = "red")
(go_bar <- ggplot(data = goBP, mapping = aes(x = Description, y = Count, fill = p.adjust)) +
geom_bar(stat = 'identity', width = 0.7)) + coord_flip() + theme_bw() +
scale_fill_gradient(low = "FF0033", high = "FF9900")
(go_bar <- ggplot(data = goBP, mapping = aes(x = Description, y = Count, fill = p.adjust)) +
geom_bar(stat = 'identity', width = 0.7)) + coord_flip() + theme_bw() +
scale_fill_gradient(low = FF0033, high = FF9900)
(go_bar <- ggplot(data = goBP, mapping = aes(x = Description, y = Count, fill = p.adjust)) +
geom_bar(stat = 'identity', width = 0.7)) + coord_flip() + theme_bw() +
scale_fill_gradient(low = F003300, high = F990000)
(go_bar <- ggplot(data = goBP, mapping = aes(x = Description, y = Count, fill = p.adjust)) +
geom_bar(stat = 'identity', width = 0.7)) + coord_flip() + theme_bw() +
scale_fill_gradient(low = 'red', high = 'orange')
barplot(go_experiment)
(go_bar <- ggplot(data = goBP, mapping = aes(x = Description, y = Count, fill = p.adjust)) +
geom_bar(stat = 'identity', width = 0.7)) + coord_flip() + theme_bw() +
scale_fill_gradient(low = 'red', high = 'orange') +
theme(axis.title = element_text(size = 13))
(go_bar <- ggplot(data = goBP, mapping = aes(x = Description, y = Count, fill = p.adjust)) +
geom_bar(stat = 'identity', width = 0.7)) + coord_flip() + theme_bw() +
scale_fill_gradient(low = 'red', high = 'orange') +
theme(axis.title = element_text(size = 50))
(go_bar <- ggplot(data = goBP, mapping = aes(x = Description, y = Count, fill = p.adjust)) +
geom_bar(stat = 'identity', width = 0.7)) + coord_flip() + theme_bw() +
scale_fill_gradient(low = 'red', high = 'orange') +
theme(axis.title = element_text(size = 25))
(go_bar <- ggplot(data = goBP, mapping = aes(x = Description, y = Count, fill = p.adjust)) +
geom_bar(stat = 'identity', width = 0.7)) + coord_flip() + theme_bw() +
scale_fill_gradient(low = 'red', high = 'orange') +
theme(axis.title = element_text(size = 20))
(go_bar <- ggplot(data = goBP, mapping = aes(x = Description, y = Count, fill = p.adjust)) +
geom_bar(stat = 'identity', width = 0.7)) + coord_flip() + theme_bw() +
scale_fill_gradient(low = 'red', high = 'orange') +
theme(axis.title = element_text(size = 20), axis.text = element_text(size = 11))
(go_bar <- ggplot(data = goBP, mapping = aes(x = Description, y = Count, fill = p.adjust)) +
geom_bar(stat = 'identity', width = 0.7)) + coord_flip() + theme_bw() +
scale_fill_gradient(low = 'red', high = 'orange') +
theme(axis.title = element_text(size = 20), axis.text = element_text(size = 20))
(go_bar <- ggplot(data = goBP, mapping = aes(x = Description, y = Count, fill = p.adjust)) +
geom_bar(stat = 'identity', width = 0.7)) + coord_flip() + theme_bw() +
scale_fill_gradient(low = 'red', high = 'orange') +
theme(axis.title = element_text(size = 20), axis.text = element_text(size = 14))
(go_bar <- ggplot(data = goBP, mapping = aes(x = Description, y = Count, fill = p.adjust)) +
geom_bar(stat = 'identity', width = 0.7)) + coord_flip() + theme_bw() +
scale_fill_gradient(low = 'red', high = 'orange') +
theme(axis.title = element_text(size = 20), axis.text = element_text(size = 14))
ggsave(go_bar, filename = go_barplot.pdf, path = './enrich_result/')
ggsave(go_bar, filename = "go_barplot.pdf", path = './enrich_result/')
ggsave(go_bar, filename = 'go_barplot.pdf', path = './enrich_result/')
(go_bar <- ggplot(data = goBP, mapping = aes(x = Description, y = Count, fill = p.adjust)) +
geom_bar(stat = 'identity', width = 0.7) + coord_flip() + theme_bw() +
scale_fill_gradient(low = 'red', high = 'orange') +
theme(axis.title = element_text(size = 20), axis.text = element_text(size = 14)))
ggsave(go_bar, filename = 'go_barplot.pdf', path = './enrich_result/')
ggsave(go_bar, filename = 'go_barplot.pdf', path = './enrich_result/', width = 30, units = 'cm')
ggsave(go_bar, filename = 'go_barplot.pdf', path = './enrich_result/', width = 20, units = 'cm')
ggsave(go_bar, filename = 'go_barplot.pdf', path = './enrich_result/', width = 20, units = 'cm')
(go_bar <- ggplot(data = goBP, mapping = aes(x = Description, y = Count, fill = p.adjust)) +
geom_bar(stat = 'identity', width = 0.7) + coord_flip() + theme_bw() +
scale_fill_gradient(low = 'red', high = 'orange') +
theme(axis.title = element_text(size = 15), axis.text = element_text(size = 12)))
ggsave(go_bar, filename = 'go_barplot.pdf', path = './enrich_result/', width = 20, units = 'cm')
View(fold_change_data)
# KEGG
bar_kegg <- barplot(KEGG_experiment)
# KEGG
(bar_kegg <- barplot(KEGG_experiment))
# KEGG
(kegg_bar <- ggplot(data = KEGG_result_experiment[1:15, ], mapping = aes(x = Description, y = Count, fill = p.adjust)) +
geom_bar(stat = 'identity', width = 0.7) + coord_flip() + theme_bw() +
scale_fill_gradient(low = 'red', high = 'orange') +
theme(axis.title = element_text(size = 15), axis.text = element_text(size = 12)))
ggsave(kegg_bar, filename = 'kegg_barplot.pdf', path = './enrich_result/', width = 20, units = 'cm')
