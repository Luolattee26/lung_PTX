pwalk(list(filename, plots), ggsave, path = './select_significant/', width = 30, height = 25, units = 'cm')
View(raw_MLE_result)
length(genes_significant_list)
dim(selected_result_significant)
genes_significant_list <- (raw_MLE_result %>% filter(.$PTX.fdr < 0.15))$Gene
# install packages
library(dplyr)
library(ggplot2)
genes_significant_list <- (raw_MLE_result %>% filter(.$PTX.fdr < 0.15))$Gene
genes_significant_list <- (raw_MLE_result %>% filter(.$PTX.fdr < 0.05))$Gene
selected_result_significant <- data.frame()
for(gene in genes_significant_list){
temp_df <- filter(selected_result, Gene == gene)
selected_result_significant <- rbind(selected_result_significant, temp_df)
}
# get a rank in significant genes
selected_result_significant <- selected_result_significant %>% mutate(new_rank = rank(.$Diff))
# significant genes PLOT
library(ggrepel)
library(purrr)
# rank plot
rank_plot <- ggplot(selected_result, mapping = aes(x = Rank, y = Diff)) + geom_point(aes(color = group), size = 2.5) +
geom_point(data = selected_result_significant, size = 4, color = 'purple') +
geom_text_repel(data = selected_result_significant, aes(label = Gene), size = 4)
# Scatter View
Scatter_View <- ggplot(filter(selected_result, group == 'bottom'), mapping = aes(x = RandomIndex, y = Diff)) + geom_point() +
geom_point(data = selected_result_significant, size = 4, color = 'blue') +
geom_text_repel(data = selected_result_significant, aes(label = Gene), size = 4, color = 'red')
plots <- list(rank_plot, Scatter_View)
filename <- stringr::str_c(c('rank_plot', 'Scatter_View'), '.pdf')
pwalk(list(filename, plots), ggsave, path = './select_significant/', width = 30, height = 25, units = 'cm')
genes_significant_list <- (raw_MLE_result %>% filter(.$PTX.wald.fdr < 0.15))$Gene
selected_result_significant <- data.frame()
for(gene in genes_significant_list){
temp_df <- filter(selected_result, Gene == gene)
selected_result_significant <- rbind(selected_result_significant, temp_df)
}
# get a rank in significant genes
selected_result_significant <- selected_result_significant %>% mutate(new_rank = rank(.$Diff))
# significant genes PLOT
library(ggrepel)
library(purrr)
# rank plot
rank_plot <- ggplot(selected_result, mapping = aes(x = Rank, y = Diff)) + geom_point(aes(color = group), size = 2.5) +
geom_point(data = selected_result_significant, size = 4, color = 'purple') +
geom_text_repel(data = selected_result_significant, aes(label = Gene), size = 4)
# Scatter View
Scatter_View <- ggplot(filter(selected_result, group == 'bottom'), mapping = aes(x = RandomIndex, y = Diff)) + geom_point() +
geom_point(data = selected_result_significant, size = 4, color = 'blue') +
geom_text_repel(data = selected_result_significant, aes(label = Gene), size = 4, color = 'red')
plots <- list(rank_plot, Scatter_View)
filename <- stringr::str_c(c('rank_plot', 'Scatter_View'), '.pdf')
pwalk(list(filename, plots), ggsave, path = './select_significant/', width = 30, height = 25, units = 'cm')
# install packages
library(dplyr)
library(ggplot2)
if (require(MAGeCKFlute) == F){
BiocManager::install('MAGeCKFlute')
}else{
library(MAGeCKFlute)
}
genes_significant_list <- (raw_MLE_result %>% filter(.$PTX.fdr < 0.05))$Gene
selected_result_significant <- data.frame()
for(gene in genes_significant_list){
temp_df <- filter(selected_result, Gene == gene)
selected_result_significant <- rbind(selected_result_significant, temp_df)
}
# get a rank in significant genes
selected_result_significant <- selected_result_significant %>% mutate(new_rank = rank(.$Diff))
View(selected_result_significant)
# get a rank in significant genes
selected_result_significant <- selected_result_significant %>% mutate(new_rank = rank(.$Diff))
# significant genes PLOT
library(ggrepel)
library(purrr)
# rank plot
rank_plot <- ggplot(selected_result, mapping = aes(x = Rank, y = Diff)) + geom_point(aes(color = group), size = 2.5) +
geom_point(data = selected_result_significant, size = 4, color = 'purple') +
geom_text_repel(data = selected_result_significant, aes(label = Gene), size = 4)
# Scatter View
Scatter_View <- ggplot(filter(selected_result, group == 'bottom'), mapping = aes(x = RandomIndex, y = Diff)) + geom_point() +
geom_point(data = selected_result_significant, size = 4, color = 'blue') +
geom_text_repel(data = selected_result_significant, aes(label = Gene), size = 4, color = 'red')
plots <- list(rank_plot, Scatter_View)
filename <- stringr::str_c(c('rank_plot', 'Scatter_View'), '.pdf')
pwalk(list(filename, plots), ggsave, path = './select_significant/', width = 30, height = 25, units = 'cm')
# rank plot
rank_plot <- ggplot(selected_result, mapping = aes(x = Rank, y = Diff)) + geom_point(aes(color = group), size = 2.5) +
geom_point(data = filter(selected_result_significant, group == 'bottom', new_rank <= 5), size = 4, color = 'purple') +
geom_text_repel(data = selected_result_significant, aes(label = Gene), size = 4)
rank_plot
# rank plot
rank_plot <- ggplot(selected_result, mapping = aes(x = Rank, y = Diff)) + geom_point(aes(color = group), size = 2.5) +
geom_point(data = filter(selected_result_significant, group == 'bottom', new_rank <= 5), size = 4, color = 'purple') +
geom_text_repel(data = filter(selected_result_significant, group == 'bottom', new_rank <= 5), aes(label = Gene), size = 4)
rank_plot
# Scatter View
Scatter_View <- ggplot(filter(selected_result, group == 'bottom'), mapping = aes(x = RandomIndex, y = Diff)) + geom_point() +
geom_point(data = filter(selected_result_significant, group == 'bottom', new_rank <= 5), size = 4, color = 'blue') +
geom_text_repel(data = filter(selected_result_significant, group == 'bottom', new_rank <= 5), aes(label = Gene), size = 4, color = 'red')
Scatter_View
plots <- list(rank_plot, Scatter_View)
filename <- stringr::str_c(c('rank_plot', 'Scatter_View'), '.pdf')
pwalk(list(filename, plots), ggsave, path = './select_significant/', width = 30, height = 25, units = 'cm')
View(raw_MLE_result)
length(genes_significant_list)
View(selected_result_significant)
length(genes_significant_list)
dim(selected_result_significant)
rm(list = ls())
setwd('c:/Users/Cal luo/Desktop/R_data_science_learning/')
getwd()
# 生物信息学分析必备的一些R包，复制以下代码，直接运行即可；
rm(list = ls())
# 设置镜像：
options()$repos
options()$BioC_mirror
#options(BioC_mirror="https://mirrors.ustc.edu.cn/bioc/")
options(BioC_mirror="http://mirrors.tuna.tsinghua.edu.cn/bioconductor/")
options("repos" = c(CRAN="https://mirrors.tuna.tsinghua.edu.cn/CRAN/"))
options()$repos
options()$BioC_mirror
# 方法一：
options()$repos
install.packages('WGCNA')
install.packages(c("FactoMineR", "factoextra"))
install.packages(c("ggplot2", "pheatmap","ggpubr"))
library("FactoMineR")
library("factoextra")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("KEGG.db",ask = F,update = F)
BiocManager::install(c("GSEABase","GSVA","clusterProfiler" ),ask = F,update = F)
BiocManager::install(c("GEOquery","limma","impute" ),ask = F,update = F)
BiocManager::install(c("org.Hs.eg.db","hgu133plus2.db" ),ask = F,update = F)
# 方法三：从github中安装
# 所有的R包都提交上传到CRAN，如Github，需要通过一定的渠道进行安装
# R安装devtools包
install.packages("devtools")
library(devtools)
library(devtools)
# 测试--加载R包；
library(REmap)
library(GSEABase)
library(GSVA)
library(clusterProfiler)
# 所有的R包都提交上传到CRAN，如Github，需要通过一定的渠道进行安装
# R安装devtools包
install.packages("devtools")
library(devtools)
install.packages('stringi')
install.packages('stringi')
BiocManager::install('stringi')
library(devtools)
# 安装github上的R包（需翻墙或改hosts）
devtools::install_github('lchiffon/REmap')
# 测试--加载R包；
library(REmap)
library(GSEABase)
library(GSVA)
library(clusterProfiler)
library(ggplot2)
library(ggpubr)
library(hgu133plus2.db)
# 测试--加载R包；
library(REmap)
library(GSEABase)
library(GSVA)
library(clusterProfiler)
library(ggplot2)
library(ggpubr)
library(hgu133plus2.db)
library(limma)
library(org.Hs.eg.db)
library(pheatmap)
BiocManager::install(c("org.Hs.eg.db","hgu133plus2.db" ),ask = F,update = F)
# 测试--加载R包；
library(REmap)
library(GSEABase)
library(GSVA)
library(clusterProfiler)
library(ggplot2)
library(ggpubr)
library(hgu133plus2.db)
library(org.Hs.eg.db)
BiocManager::install(c("org.Hs.eg.db","hgu133plus2.db" ))
install.packages('org.Hs.eg.db')
library(org.Hs.eg.db)
library(hgu133plus2.db)
BiocManager::install('org.Hs.eg.db')
library(hgu133plus2.db)
library(org.Hs.eg.db)
BiocManager::install('org.Hs.eg.db')
if (require(MAGeCKFlute) == F){
BiocManager::install('MAGeCKFlute')
}else{
library(MAGeCKFlute)
}
# install packages
library(dplyr)
library(ggplot2)
if (require(MAGeCKFlute) == F){
BiocManager::install('MAGeCKFlute')
}else{
library(MAGeCKFlute)
}
if (require(MAGeCKFlute) == F){
BiocManager::install('MAGeCKFlute')
}else{
library(MAGeCKFlute)
}
if (require(MAGeCKFlute) == F){
BiocManager::install('MAGeCKFlute')
}else{
library(MAGeCKFlute)
}
if (require(MAGeCKFlute) == F){
BiocManager::install('MAGeCKFlute')
}else{
library(MAGeCKFlute)
}
library(MAGeCKFlute)
library(MAGeCKFlute)
BiocManager::install('MAGeCKFlute')
BiocManager::install('MAGeCKFlute', force = T)
library(MAGeCKFlute)
rm(list = ls())
setwd('C:/Users/Administrator/Desktop/lung_PTX/R_scripts/AR_6PGD_KnockDown/')
getwd()
library(limma)
raw_cpm <- read.table('./GSE152254_All_data_cpm.txt', header = T, sep = '\t')
View(raw_cpm)
library(tidyverse)
raw_cpm <- read.table('./GSE152254_All_data_cpm.txt', header = T, sep = '\t') %>% .[, c(1, 2, 11:18)]
group_list <- factor(c(rep("control",2), rep("siSUZ12",2)))
group_list
# limma DEGs
group_list <- factor(c(rep("control",2), rep("siSUZ12",2)))
colnames(raw_cpm)
# limma DEGs
group_list <- factor(c(rep("siCon_48h_",4), rep("siAR_48h_",4)))
group_list
# limma DEGs
group_list <- factor(c(rep("siCon_48h", 4), rep("siAR_48h", 4)))
design <- model.matrix(~ group_list)
design
group_list <- factor(c(rep("control",2), rep("siSUZ12",2)))
design <- model.matrix(~group_list)
design
colnames(design) <- levels(group_list)
group_list <- factor(c(rep("siCon_48h", 4), rep("siAR_48h", 4)))
design <- model.matrix(~ group_list)
colnames(design) <- levels(group_list)
rownames(design) <- colnames(counts)
group_list <- factor(c(rep("siCon_48h", 4), rep("siAR_48h", 4)))
design <- model.matrix(~ group_list)
colnames(design) <- levels(group_list)
rownames(design) <- colnames(raw_cpm)
raw_cpm <- read.table('./GSE152254_All_data_cpm.txt', header = T, sep = '\t', row.names = 1) %>% .[, c(10:17)]
group_list <- factor(c(rep("siCon_48h", 4), rep("siAR_48h", 4)))
design <- model.matrix(~ group_list)
colnames(design) <- levels(group_list)
rownames(design) <- colnames(raw_cpm)
design
# limma DEGs
group_list <- factor(c(rep("siCon_48h", 4), rep("siAR_48h", 4)))
design <- model.matrix(~ 0 + group_list)
colnames(design) <- levels(group_list)
rownames(design) <- colnames(raw_cpm)
design
# limma DEGs
group_list <- factor(c(rep("siCon_48h", 4), rep("siAR_48h", 4)))
design <- model.matrix(~ 0 + group_list)
design
design
# limma DEGs
group_list <- factor(c(rep("siCon_48h", 4), rep("siAR_48h", 4)))
design <- model.matrix(~ 0 + group_list)
colnames(design) <- levels(group_list)
rownames(design) <- colnames(raw_cpm)
library(limma)
library(tidyverse)
raw_cpm <- read.table('./GSE152254_All_data_cpm.txt', header = T, sep = '\t', row.names = 1) %>% .[, c(10:17)]
# limma DEGs
group_list <- factor(c(rep("siCon_48h", 4), rep("siAR_48h", 4)))
design <- model.matrix(~ 0 + group_list)
colnames(design) <- levels(group_list)
rownames(design) <- colnames(raw_cpm)
design
cont.matrix <- makeContrasts(contrasts = paste0(siAR_48h, '-', siCon_48h))
cont.matrix <- makeContrasts(contrasts = paste0(siAR_48h, '-', siCon_48h), levels = design)
cont.matrix <- makeContrasts(contrasts = paste0('siAR_48h', '-', 'siCon_48h'), levels = design)
cont.matrix
paste0('siAR_48h', '-', 'siCon_48h')
?cpm
BiocManager::install('EdgeR')
library(EdgeR)
library(edgeR)
BiocManager::install('edgeR')
library(edgeR)
?cpm
log_cpm <- log2(raw_cpm)
raw_cpm <- read.table('./GSE152254_All_data_cpm.txt', header = T, sep = '\t', row.names = 1) %>% .[, c(10:17)]
log_cpm <- log2(raw_cpm)
raw_cpm <- read.table('./GSE152254_All_data_cpm.txt', header = T, sep = '\t', row.names = 1) %>% .[, c(10:17)]
log_cpm <- log2(raw_cpm)
View(log_cpm)
raw_cpm <- read.table('./GSE152254_All_data_cpm.txt', header = T, sep = '\t', row.names = 1) %>% .[, c(10:17)]
# limma DEGs
group_list <- factor(c(rep("siCon_48h", 4), rep("siAR_48h", 4)))
design <- model.matrix(~ 0 + group_list)
colnames(design) <- levels(group_list)
rownames(design) <- colnames(raw_cpm)
cont.matrix <- makeContrasts(contrasts = paste0('siAR_48h', '-', 'siCon_48h'), levels = design)
# the raw data is normalized,get log2(CPM)
log_cpm <- log2(raw_cpm)
# fit
fit1 <- lmFit(log_cpm, design)
efit <- eBayes(fit2, trend = T)
# fit
fit1 <- lmFit(log_cpm, design) # linear fit
fit2 <- contrasts.fit(fit1, cont.matrix) # statistic test
efit <- eBayes(fit2, trend = T)
tempDEGs <- topTable(efit, coef = paste0('siAR_48h', '-', 'siCon_48h'), n = Inf)
DEG_limma_trend <- na.omit(tempDEGs)
View(DEG_limma_trend)
dim(DEG_limma_trend %>% filter(abs(logFC) > 1, adj.P.Val < 0.05))
ggplot(DEG_limma_trend, aes(x = logFC, y = -log10(adj.P.Val))) +
geom_hline(yintercept = -log10(0.05), linetype = 'dashed') +
geom_point(aes(size = -log10(adj.P.Val), color = -log10(adj.P.Val))) + theme_bw() +
theme(panel.grid = element_blank()) + scale_color_gradientn(values = seq(0, 1, 0.2),
colours = c('#3f56a6', '#3ec2e9', '#feec31', '#f16d68', '#c21d31')) +
scale_size_continuous(range = c(1, 3.5))
ggplot(DEG_limma_trend, aes(x = logFC, y = -log10(adj.P.Val))) +
geom_hline(yintercept = -log10(0.05), linetype = 'dashed') +
geom_point(aes(size = -log10(adj.P.Val), color = -log10(adj.P.Val))) + theme_bw() +
theme(panel.grid = element_blank()) + scale_color_gradientn(values = seq(0, 1, 0.2),
colours = c('#3f56a6', '#3ec2e9', '#feec31', '#f16d68', '#c21d31')) +
scale_size_continuous(range = c(1, 2.5))
ggplot(DEG_limma_trend, aes(x = logFC, y = -log10(adj.P.Val))) +
geom_hline(yintercept = -log10(0.05), linetype = 'dashed') +
geom_vline(xintercept = c(-2, 2), linetype = 'dashed') +
geom_point(aes(size = -log10(adj.P.Val), color = -log10(adj.P.Val))) + theme_bw() +
theme(panel.grid = element_blank()) + scale_color_gradientn(values = seq(0, 1, 0.2),
colours = c('#3f56a6', '#3ec2e9', '#feec31', '#f16d68', '#c21d31')) +
scale_size_continuous(range = c(1, 2.5))
raw_cpm <- read.table('./GSE152254_All_data_cpm.txt', header = T, sep = '\t', row.names = 2) %>% .[, c(10:17)]
raw_cpm <- read.table('./GSE152254_All_data_cpm.txt', header = T, sep = '\t', row.names = 1) %>% .[, c(10:17)]
ggplot(DEG_limma_trend, aes(x = logFC, y = -log10(adj.P.Val))) +
geom_hline(yintercept = -log10(0.05), linetype = 'dashed') +
geom_vline(xintercept = c(-2, 2), linetype = 'dashed') +
geom_point(aes(size = -log10(adj.P.Val), color = -log10(adj.P.Val))) + theme_bw() +
theme(panel.grid = element_blank()) + scale_color_gradientn(values = seq(0, 1, 0.2),
colours = c('#3f56a6', '#3ec2e9', '#feec31', '#f16d68', '#c21d31')) +
scale_size_continuous(range = c(1, 2))
read.table('./GSE152254_All_data_cpm.txt', header = T, sep = '\t', row.names = 1)
en_to_symbol <- read.table('./GSE152254_All_data_cpm.txt', header = T, sep = '\t') %>% .[, 1:2]
View(en_to_symbol)
DEG_limma_trend['ENSG00000084774', ]
PGD_experison <- DEG_limma_trend['ENSG00000142657', ]
PGD_experison
ggplot(DEG_limma_trend, aes(x = logFC, y = -log10(adj.P.Val))) +
geom_hline(yintercept = -log10(0.05), linetype = 'dashed') +
geom_vline(xintercept = c(-1, 1), linetype = 'dashed') +
geom_point(aes(size = -log10(adj.P.Val), color = -log10(adj.P.Val))) + theme_bw() +
theme(panel.grid = element_blank()) + scale_color_gradientn(values = seq(0, 1, 0.2),
colours = c('#3f56a6', '#3ec2e9', '#feec31', '#f16d68', '#c21d31')) +
scale_size_continuous(range = c(1, 2))
View(DEG_limma_trend)
up_genes <- DEG_limma_trend %>% filter(logFC >= 1, adj.P.Val < 0.05)
View(up_genes)
down_genes <- DEG_limma_trend %>% filter(logFC <= 1, adj.P.Val < 0.05)
dim(DEG_limma_trend %>% filter(abs(logFC) > 1, adj.P.Val < 0.05))
dim(DEG_limma_trend %>% filter(abs(logFC) >= 1, adj.P.Val < 0.05))
up_genes <- DEG_limma_trend %>% filter(logFC >= 1, adj.P.Val < 0.05)
down_genes <- DEG_limma_trend %>% filter(logFC <= 1, adj.P.Val < 0.05)
View(down_genes)
dim(DEG_limma_trend %>% filter(abs(logFC) >= 1, adj.P.Val < 0.05))
up_genes <- DEG_limma_trend %>% filter(logFC >= 1, adj.P.Val < 0.05)
down_genes <- DEG_limma_trend %>% filter(logFC <= 1, adj.P.Val < 0.05)
significant_genes <- DEG_limma_trend %>% filter(abs(logFC) >= 1, adj.P.Val < 0.05)
View(significant_genes)
PGD_experison <- DEG_limma_trend['ENSG00000142657', ]
PGD_experison
up_genes <- significant_genes %>% filter(.$logFC > 0)
down_genes <- significant_genes %>% filter(.$logFC < 0)
View(down_genes)
where(down_genes['ENSG00000142657', ])
where(rownames(down_genes) == 'ENSG00000142657')
down_genes$label <- NA
up_genes <- significant_genes %>% filter(.$logFC > 0)
down_genes <- significant_genes %>% filter(.$logFC < 0)
down_genes$label <- NA
down_genes['ENSG00000142657', ]$label <- 'PGD'
DEG_limma_trend$label <- NA
DEG_limma_trend['ENSG00000142657', ]$label <- 'PGD'
ggplot(DEG_limma_trend, aes(x = logFC, y = -log10(adj.P.Val))) +
geom_hline(yintercept = -log10(0.05), linetype = 'dashed') +
geom_vline(xintercept = c(-1, 1), linetype = 'dashed') +
geom_point(aes(size = -log10(adj.P.Val), color = -log10(adj.P.Val))) + theme_bw() +
theme(panel.grid = element_blank()) + scale_color_gradientn(values = seq(0, 1, 0.2),
colours = c('#3f56a6', '#3ec2e9', '#feec31', '#f16d68', '#c21d31')) +
scale_size_continuous(range = c(1, 2)) +
geom_text(aes(label = label))
ggplot(DEG_limma_trend, aes(x = logFC, y = -log10(adj.P.Val))) +
geom_hline(yintercept = -log10(0.05), linetype = 'dashed') +
geom_vline(xintercept = c(-1, 1), linetype = 'dashed') +
geom_point(aes(size = -log10(adj.P.Val), color = -log10(adj.P.Val))) + theme_bw() +
theme(panel.grid = element_blank()) + scale_color_gradientn(values = seq(0, 1, 0.2),
colours = c('#3f56a6', '#3ec2e9', '#feec31', '#f16d68', '#c21d31')) +
scale_size_continuous(range = c(1, 2)) +
geom_text(aes(label = label), vjust = 1.5)
significant_genes <- DEG_limma_trend %>% filter(abs(logFC) >= 1, adj.P.Val < 0.05)
up_genes <- significant_genes %>% filter(.$logFC > 0)
down_genes <- significant_genes %>% filter(.$logFC < 0)
library(clusterProfiler)
row.names(up_genes)
up_ENTREZID <- bitr(row.names(up_genes), fromType = 'ENSEMBL', toType = 'ENTREZID', OrgDb = org.Hs.eg.db)
library(org.Hs.eg.db)
# get ENTREZID
up_ENTREZID <- bitr(row.names(up_genes), fromType = 'ENSEMBL', toType = 'ENTREZID', OrgDb = org.Hs.eg.db)
down_ENTREZID <- bitr(row.names(down_genes), fromType = 'ENSEMBL', toType = 'ENTREZID', OrgDb = org.Hs.eg.db)
go_up <- enrichGO(gene = up_ENTREZID$ENTREZID, OrgDb = 'org.Hs.eg.db',
ont = 'all', readable = T, pAdjustMethod = 'BH', pvalueCutoff = 0.05, qvalueCutoff = 0.1)
up_result_go <- as.data.frame(go_up@result)
View(up_result_go)
go_down <- enrichGO(gene = down_ENTREZID$ENTREZID, OrgDb = 'org.Hs.eg.db',
ont = 'all', readable = T, pAdjustMethod = 'BH', pvalueCutoff = 0.05, qvalueCutoff = 0.1)
down_result_go <- as.data.frame(go_down@result)
View(down_result_go)
go_down <- enrichGO(gene = down_ENTREZID$ENTREZID, OrgDb = 'org.Hs.eg.db',
ont = 'all', readable = T, pAdjustMethod = 'BH', pvalueCutoff = 0.05, qvalueCutoff = 0.25)
down_result_go <- as.data.frame(go_down@result)
View(down_result_go)
# go
go_down <- enrichGO(gene = down_ENTREZID$ENTREZID, OrgDb = 'org.Hs.eg.db',
ont = 'all', readable = T, pAdjustMethod = 'BH', pvalueCutoff = 0.1, qvalueCutoff = 0.25)
down_result_go <- as.data.frame(go_down@result)
kegg_down <- enrichKEGG(gene = down_ENTREZID$ENTREZID, organism = 'hsa',
keyType = 'kegg', pAdjustMethod = 'BH', pvalueCutoff = 0.05, qvalueCutoff = 0.1)
down_result_kegg <- setReadable(kegg_down, OrgDb = org.Hs.eg.db, keyType = 'ENTREZID')
down_result_kegg <- data.frame(down_result_kegg@result)
View(down_result_kegg)
(kegg_bar <- ggplot(data = down_result_kegg[1:15, ], mapping = aes(x = Description, y = Count, fill = p.adjust)) +
geom_bar(stat = 'identity', width = 0.7) + coord_flip() + theme_bw() +
scale_fill_gradient(low = '#c82044', high = '#4058a6') +
theme(axis.title = element_text(size = 15), axis.text = element_text(size = 12)))
ggsave(kegg_bar, filename = 'kegg_barplot_down.pdf', path = './enrichment/', width = 20, units = 'cm')
### enrich
## up
# go
go_up <- enrichGO(gene = up_ENTREZID$ENTREZID, OrgDb = 'org.Hs.eg.db',
ont = 'all', readable = T, pAdjustMethod = 'BH', pvalueCutoff = 0.05, qvalueCutoff = 0.1)
up_result_go <- as.data.frame(go_up@result)
# kegg
kegg_up <- enrichKEGG(gene = up_ENTREZID$ENTREZID, organism = 'hsa',
keyType = 'kegg', pAdjustMethod = 'BH', pvalueCutoff = 0.05, qvalueCutoff = 0.1)
up_result_kegg <- setReadable(kegg_up, OrgDb = org.Hs.eg.db, keyType = 'ENTREZID')
up_result_kegg <- data.frame(up_result_kegg@result)
## down
# go
go_down <- enrichGO(gene = down_ENTREZID$ENTREZID, OrgDb = 'org.Hs.eg.db',
ont = 'all', readable = T, pAdjustMethod = 'BH', pvalueCutoff = 0.1, qvalueCutoff = 0.25)
down_result_go <- as.data.frame(go_down@result)
# kegg
kegg_down <- enrichKEGG(gene = down_ENTREZID$ENTREZID, organism = 'hsa',
keyType = 'kegg', pAdjustMethod = 'BH', pvalueCutoff = 0.05, qvalueCutoff = 0.1)
down_result_kegg <- setReadable(kegg_down, OrgDb = org.Hs.eg.db, keyType = 'ENTREZID')
down_result_kegg <- data.frame(down_result_kegg@result)
### Plot
## up
# GO
goBP <- subset(up_result_go, subset = (ONTOLOGY == "BP"))[1:10, ]
goCC <- subset(up_result_go, subset = (ONTOLOGY == "CC"))[1:10, ]
goMF <- subset(up_result_go, subset = (ONTOLOGY == "MF"))[1:10, ]
(go_bar <- ggplot(data = goBP, mapping = aes(x = Description, y = Count, fill = p.adjust)) +
geom_bar(stat = 'identity', width = 0.7) + coord_flip() + theme_bw() +
scale_fill_gradient(low = '#c82044', high = '#4058a6') +
theme(axis.title = element_text(size = 15), axis.text = element_text(size = 12)))
ggsave(go_bar, filename = 'go_barplot_up.pdf', path = './enrichment/', width = 20, units = 'cm')
# KEGG
(kegg_bar <- ggplot(data = up_result_kegg[1:15, ], mapping = aes(x = Description, y = Count, fill = p.adjust)) +
geom_bar(stat = 'identity', width = 0.7) + coord_flip() + theme_bw() +
scale_fill_gradient(low = '#c82044', high = '#4058a6') +
theme(axis.title = element_text(size = 15), axis.text = element_text(size = 12)))
ggsave(kegg_bar, filename = 'kegg_barplot_up.pdf', path = './enrichment/', width = 20, units = 'cm')
## down
# GO
goBP <- subset(down_result_go, subset = (ONTOLOGY == "BP"))[1:10, ]
goCC <- subset(down_result_go, subset = (ONTOLOGY == "CC"))[1:10, ]
goMF <- subset(down_result_go, subset = (ONTOLOGY == "MF"))[1:10, ]
(go_bar <- ggplot(data = goBP, mapping = aes(x = Description, y = Count, fill = p.adjust)) +
geom_bar(stat = 'identity', width = 0.7) + coord_flip() + theme_bw() +
scale_fill_gradient(low = '#c82044', high = '#4058a6') +
theme(axis.title = element_text(size = 15), axis.text = element_text(size = 12)))
ggsave(go_bar, filename = 'go_barplot_down.pdf', path = './enrichment/', width = 20, units = 'cm')
# KEGG
(kegg_bar <- ggplot(data = down_result_kegg[1:15, ], mapping = aes(x = Description, y = Count, fill = p.adjust)) +
geom_bar(stat = 'identity', width = 0.7) + coord_flip() + theme_bw() +
scale_fill_gradient(low = '#c82044', high = '#4058a6') +
theme(axis.title = element_text(size = 15), axis.text = element_text(size = 12)))
ggsave(kegg_bar, filename = 'kegg_barplot_down.pdf', path = './enrichment/', width = 20, units = 'cm')
# plot
(valcano_plot <- ggplot(DEG_limma_trend, aes(x = logFC, y = -log10(adj.P.Val))) +
geom_hline(yintercept = -log10(0.05), linetype = 'dashed') +
geom_vline(xintercept = c(-1, 1), linetype = 'dashed') +
geom_point(aes(size = -log10(adj.P.Val), color = -log10(adj.P.Val))) + theme_bw() +
theme(panel.grid = element_blank()) + scale_color_gradientn(values = seq(0, 1, 0.2),
colours = c('#3f56a6', '#3ec2e9', '#feec31', '#f16d68', '#c21d31')) +
scale_size_continuous(range = c(1, 2)) +
geom_text(aes(label = label), vjust = 1.5))
ggsave(valcano_plot, filename = 'valcano_plot.pdf', path = './', width = 15, height = 20, units = 'cm')
